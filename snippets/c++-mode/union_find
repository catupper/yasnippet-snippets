# -*- mode: snippet -*-
# name: union-find
# key: /unionfind
# group: DataStructure
# --

class UnionFind{
public:
  int n;
  vector<int> u;
  UnionFind(int _n = 0){
    n = _n;
    u = vector<int>(n, -1);
  }
  int r(int x){
    if(u[x] < 0)return x;
    return u[x] = r(u[x]);
  }
  void unite(int x, int y){
    x = r(x);
    y = r(y);
    if(x == y)return;
    if(-u[x] < -u[y])swap(x,y);
    u[x] += u[y];
    u[y] = x;
  }
  int size(int x){
    return -u[r(x)];
  }
}
